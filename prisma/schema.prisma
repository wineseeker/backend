generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id
  email         String    @unique
  password_hash String
  role          Role      @default(USER)
  sessions      Session[]
  results       Result[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Result {
  id      Int          @id @default(autoincrement())
  userId  String?      @map("user_id")
  clicked Int?
  wine    ResultWine[]

  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ResultWine {
  result   Result @relation(fields: [resultId], references: [id])
  resultId Int    @map("result_id")
  wine     Wines  @relation(fields: [wineId], references: [id])
  wineId   Int    @map("wine_id")

  @@id([resultId, wineId])
  @@map("result_wine")
}

model Wines {
  id              Int          @id @default(autoincrement())
  name            String
  ratingCount     Int          @map("rating_count")
  ratingAverage   Float        @map("rating_average")
  typeId          Int          @map("type_id")
  sweetness       Float
  alcohol         Float
  tannin          Float
  body            Float
  acidity         Float
  countryCode     String       @map("country_code")
  food            WineFood[]
  grapes          WineGrapes[]
  recommendations ResultWine[]
}

model WineFood {
  wine   Wines @relation(fields: [wineId], references: [id])
  wineId Int   @map("wine_id")
  food   Food  @relation(fields: [foodId], references: [id])
  foodId Int   @map("food_id")

  @@id([wineId, foodId])
  @@map("wine_food")
}

model Food {
  id       Int        @id @default(autoincrement())
  name     String
  WineFood WineFood[]
}

model WineGrapes {
  wine     Wines  @relation(fields: [wineId], references: [id])
  wineId   Int    @map("wine_id")
  grapes   Grapes @relation(fields: [grapesId], references: [id])
  grapesId Int    @map("grape_id")

  @@id([wineId, grapesId])
  @@map("wine_grapes")
}

model Grapes {
  id         Int          @id @default(autoincrement())
  name       String
  WineGrapes WineGrapes[]
}

model Survey {
  id        Int   @id @default(autoincrement())
  wine_type Int
  body      Float
  alcohol   Float
  acidity   Float
  sweetness Float
  tannin    Float
}

enum Role {
  USER
  ADMIN
}
